name: Jobs Scraper -> Email (SMTP)

on:
  workflow_dispatch: # manual runs always send latest 50 and save their IDs
  schedule:
    - cron: "0 * * * *" # every hour (UTC)

jobs:
  scrape_and_send_jobs:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to commit state/sent.json
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate required secrets
        run: |
          fail=0
          [ -z "${{ secrets.SMTP_SERVER }}" ] && echo "::error::Missing SMTP_SERVER" && fail=1
          [ -z "${{ secrets.SMTP_PORT }}" ]   && echo "::error::Missing SMTP_PORT" && fail=1
          [ -z "${{ secrets.SMTP_USER }}" ]   && echo "::error::Missing SMTP_USER" && fail=1
          [ -z "${{ secrets.SMTP_PASS }}" ]   && echo "::error::Missing SMTP_PASS" && fail=1
          if [ -z "${{ secrets.RECIPIENT }}" ] && [ -z "${{ secrets.RECIPIENTS_JSON }}" ]; then
            echo "::error::Provide RECIPIENT or RECIPIENTS_JSON"
            fail=1
          fi
          exit $fail

      # Optional: write recipients.json from a GitHub secret (for multiple recipients)
      # We do the check INSIDE the shell (avoid step-level if with secrets).
      - name: Write recipients.json from secret (optional)
        run: |
          if [ -n "${{ secrets.RECIPIENTS_JSON }}" ]; then
            echo '${{ secrets.RECIPIENTS_JSON }}' > recipients.json
            echo "recipients.json written from secret."
          else
            echo "RECIPIENTS_JSON not set; skipping."
          fi

      - name: Scrape & send (manual = latest 50; cron = only new)
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          RECIPIENT: ${{ secrets.RECIPIENT }} # optional single-recipient fallback
          SOURCE_URL: "https://raw.githubusercontent.com/SimplifyJobs/New-Grad-Positions/dev/README.md"
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            python scripts/scrape_send.py --manual
          else
            python scripts/scrape_send.py
          fi

      - name: Commit state (if changed)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add state/sent.json || true
          git commit -m "chore: update sent state" || echo "No changes"
          git push || echo "No changes"
          
      
